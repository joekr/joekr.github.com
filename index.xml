<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>http://joekratzat.com/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Joe Kratzat</copyright><lastBuildDate>Fri, 10 Jun 2016 21:14:00 -0500</lastBuildDate><atom:link href="http://joekratzat.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying Hugo site using wercker to github</title><link>http://joekratzat.com/post/2016/deploying-hugo-site-using-wercker-to-github/</link><pubDate>Fri, 10 Jun 2016 21:14:00 -0500</pubDate><guid>http://joekratzat.com/post/2016/deploying-hugo-site-using-wercker-to-github/</guid><description>After moving to Hugo from Jekyll I needed to setup auto-deploy changes to my github page. Originally it was set up to use a deploy.sh script from the Hugo blog post. That just isn&amp;rsquo;t good enough. I&amp;rsquo;m lazy and I want the computer to do the work for me.
Wercker Hugo has another great post, automated deployments using wercker. Since I split up my source and site repos from the previous Hugo post for my personal page I had to make one tweak to the wercker.</description></item><item><title>Go Hugo</title><link>http://joekratzat.com/post/2016/go-hugo/</link><pubDate>Fri, 10 Jun 2016 02:10:00 -0500</pubDate><guid>http://joekratzat.com/post/2016/go-hugo/</guid><description>I&amp;rsquo;ve been working a lot with Go lately, and clearly I don&amp;rsquo;t blog at all. My last post was 2014. So I decided to upgrade my blog to use Hugo in hopes to get my involved once more.
Mainly this is a test to make sure my deployment works well. Because let&amp;rsquo;s be honest, if deployment becomes a pain I won&amp;rsquo;t do it.</description></item><item><title>Theme Toggler: My first Atom package</title><link>http://joekratzat.com/post/2014/theme-toggler-my-first-atom-package/</link><pubDate>Sun, 20 Apr 2014 20:35:00 -0500</pubDate><guid>http://joekratzat.com/post/2014/theme-toggler-my-first-atom-package/</guid><description>Lately, I have been using the Atom editor. I really like working with it. The custom packages and themes make it very nice. My only issue has been that dark themes are terrible to work with while outside, and light themes are too bright inside.
I know there are two great theme changing packages already: Outdoor Theme, and Theme Switcher, but neither gave me quite what I wanted.
Since Atom makes it easy to generate and distribute packages I went ahead and created Theme Toggler.</description></item><item><title>3rd party libraries and Android Studio Gradle issues</title><link>http://joekratzat.com/post/2013/3rd-party-libraries-and-android-studio-gradle-issues/</link><pubDate>Wed, 23 Oct 2013 15:35:00 -0500</pubDate><guid>http://joekratzat.com/post/2013/3rd-party-libraries-and-android-studio-gradle-issues/</guid><description>I want to start this off by saying that this was for Android Studio 0.2 and at the time of this post that is already outdated. However, I feel this might help others.
The project I was working on was currently using an older version of the Android Gradle plugin (0.4.2) with and older version of Android Studio. I had version 0.2 which requires the Android Gradle plugin minimum of 0.</description></item><item><title>jenkins and bitbucket</title><link>http://joekratzat.com/post/2013/jenkins-and-bitbucket/</link><pubDate>Tue, 21 May 2013 22:11:00 -0500</pubDate><guid>http://joekratzat.com/post/2013/jenkins-and-bitbucket/</guid><description>Tonight I had to setup a new instance of Jenkins. Having never set Jenkins to work with Bitbucket before I thought this might help out others. This will cover Jenkins accessing only Bitbucket, having it deploy might be another post, but that isn&amp;rsquo;t covered here.
Jenkins install Starting out, I have a blank Digital Ocean droplet. There is basically nothing. I had to install Jenkins, which is pretty basic:</description></item><item><title>Carrierwave, RSpec and FactoryGirl</title><link>http://joekratzat.com/post/2013/carrierwave-rspec-and-factorygirl/</link><pubDate>Tue, 26 Mar 2013 21:02:00 -0500</pubDate><guid>http://joekratzat.com/post/2013/carrierwave-rspec-and-factorygirl/</guid><description>As part of a project I wanted to run some rspec tests on a model that had many children models using Carrierwave to upload files to S3.
My models look something like this:
class User &amp;lt; ActiveRecord::Base ... has_many :images ... end class Image &amp;lt; ActiveRecord::Base ... belongs_to :user validates_presence_of :file ... mount_uploader :file, FileUploader ... end In order to this I needd a few things:
Rspec Tests Store files locally (not on S3) Clean up locally created files Creating the test object To help create the test objects I use FactoryGirl.</description></item><item><title>New Site Setup</title><link>http://joekratzat.com/post/2013/new-site-setup/</link><pubDate>Wed, 20 Mar 2013 00:21:00 -0500</pubDate><guid>http://joekratzat.com/post/2013/new-site-setup/</guid><description>With Posterous closing down April 30th (thanks Twitter) I felt it was time to move my site elsewhere. I opted for Github Pages using Octopress (designed for Jekyll).
So far I&amp;rsquo;m very happy with it. Everything is very customizable, setup was super simple and fast, and deployment was a snap! I say that with the caveat that some ruby/rails development experience might be necessary. Was Posterous easier than all of this?</description></item><item><title>About</title><link>http://joekratzat.com/page/about/</link><pubDate>Tue, 19 Mar 2013 23:51:00 -0500</pubDate><guid>http://joekratzat.com/page/about/</guid><description>Using my powers for good I&amp;rsquo;m a passionate software developer, that loves to explore and learn new things. Currently a Software Engineer at Foxio working in iOS, Android, Go, JS and Ruby mainly.
I enjoy what I do and hope to continue exploring and honing my craft. There is nothing better than creating things that can help change the world.</description></item><item><title>publications</title><link>http://joekratzat.com/page/publications/</link><pubDate>Tue, 19 Mar 2013 21:05:00 -0500</pubDate><guid>http://joekratzat.com/page/publications/</guid><description>A growing list of publications:
http://www.theserverside.com/feature/Why-Should-My-Phone-Store-Data-Locally-When-its-all-in-the-cloud</description></item><item><title>Just Commit</title><link>http://joekratzat.com/post/2013/just-commit/</link><pubDate>Mon, 04 Feb 2013 22:16:00 -0500</pubDate><guid>http://joekratzat.com/post/2013/just-commit/</guid><description>I&amp;rsquo;m adopting the motto Just Commit. I&amp;rsquo;m tired of over thinking. It makes things move slower, and can sometimes be crippling. A good friend of my tends to tell me &amp;ldquo;just commit&amp;rdquo; when refering to code. If something breaks, fix it. If something isn&amp;rsquo;t optimal yet, it can be optimized later, but just commit. This, starting a few days ago, is my new life motto.
So from now now I will be just commiting!</description></item><item><title>Objective-C Blocks vs NSNotificationCenter for async completion</title><link>http://joekratzat.com/post/2012/objective-c-blocks-vs-nsnotificationcenter-for-async-completion/</link><pubDate>Mon, 31 Dec 2012 21:43:00 -0500</pubDate><guid>http://joekratzat.com/post/2012/objective-c-blocks-vs-nsnotificationcenter-for-async-completion/</guid><description>I&amp;rsquo;m working on a project that was created pre iOS 4.0, and is now only supporting iOS 4 and later. This means I am able to finally use Blocks. So what was being used to inform an object when a called async method passed or failed? NSNotificationCenter. This was the original code and it worked pretty well:
It allowed the method getSubscriptionFromServer to inform the caller in the Subscription class to know when getSubscriptionFromServer was complete, or failed.</description></item><item><title>Spring-ws SOAP &#39;No adapter for endpoint&#39;</title><link>http://joekratzat.com/post/2012/spring-ws-soap-no-adapter-for-endpoint/</link><pubDate>Wed, 26 Sep 2012 20:40:00 -0500</pubDate><guid>http://joekratzat.com/post/2012/spring-ws-soap-no-adapter-for-endpoint/</guid><description>Why am I using SOAP? I don&amp;rsquo;t want to talk about it. Basically I have a need for a Spring MVC project to provide a Spring-ws SOAP endpoint. After following the Spring documentation here and downloading the source code here I noticed something. The documentation is using jdom for marshalling. While the source code is using jdom2.
After struggling for a while I find out that using jdom, even with everything setup correctly, will result in the following error:</description></item><item><title>Git: a powerful front-end to Subversion</title><link>http://joekratzat.com/post/2012/git-a-powerful-front-end-to-subversion/</link><pubDate>Sat, 28 Jan 2012 22:13:00 -0500</pubDate><guid>http://joekratzat.com/post/2012/git-a-powerful-front-end-to-subversion/</guid><description>Git is a great version control system. I have used it for some time on many different projects and I really enjoy working with it. My life is bit simpler because of Git.
When I had to move back to SVN I didn&amp;rsquo;t really like the idea of losing local features branches, stashing , and easy merging. Luckily, Git has the a svn command which allows me to use Git as my front end to SVN.</description></item><item><title>Unity3D and JSON parsing</title><link>http://joekratzat.com/post/2011/unity3d-and-json-parsing/</link><pubDate>Thu, 21 Apr 2011 21:54:00 -0500</pubDate><guid>http://joekratzat.com/post/2011/unity3d-and-json-parsing/</guid><description>Today I was working on a Unity3D web player project that requires pulling JSON from a remote server. I needed a way to parse the JSON string. After working with multiple JSON libraries (Jayrock being the main one) I found that LitJson worked well with in Unity once you had the DLL. I was unable to get Jayrock to work with Unity&amp;rsquo;s web player. Turns out that Unity desktop builds use a subset of the Mono SDK, which can be changed to use the full SDK.</description></item><item><title>A Little Fun At MobileX</title><link>http://joekratzat.com/post/2011/a-little-fun-at-mobilex/</link><pubDate>Mon, 18 Apr 2011 22:18:00 -0500</pubDate><guid>http://joekratzat.com/post/2011/a-little-fun-at-mobilex/</guid><description>A coworker and I attened MobileX in Lexington Ky this past week. It was a great time! Since we are a new smaller company we thought we should promote the company, but how? After much discussion the idea of having a simple shirt won (time/money constraints). The front had the company name while the back had a logo. It was pretty good, but we felt it needed just a bit more.</description></item></channel></rss>